{"version":3,"sources":["../SERVER/db.js"],"names":["require","Pool","dotenv","config","pool","connectionString","process","env","DATABASE_URL","ssl","on","console","log","createCarTables","queryText","query","then","res","end","err","createOrderTables","createUserTables","createFlagTables","dropCarTables","dropOrderTables","dropUserTables","dropFlagTables","exit","module","exports"],"mappings":"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","sourcesContent":["\r\nconst { Pool } = require('pg');\r\nconst dotenv = require('dotenv');\r\n\r\n\r\ndotenv.config();\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL, ssl: true,\r\n});\r\n\r\npool.on('connect', () => {\r\n  console.log('connected to the db');\r\n});\r\n\r\n/**\r\n * Create Tables\r\n */\r\nconst createCarTables = () => {\r\n  const queryText = `CREATE TABLE IF NOT EXISTS\r\n      cars(\r\n        id UUID PRIMARY KEY,\r\n        created_on VARCHAR(128),\r\n        manufacturer VARCHAR(128) ,\r\n        price VARCHAR(128) ,\r\n        owner VARCHAR(128) ,\r\n        state VARCHAR(128) ,\r\n        status VARCHAR(128) ,\r\n        body_type VARCHAR(128) ,\r\n        model VARCHAR(128) ,\r\n        created_date TIMESTAMP,\r\n        modified_date TIMESTAMP\r\n      )`;\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\n\r\nconst createOrderTables = () => {\r\n  const queryText = `CREATE TABLE IF NOT EXISTS\r\n        orders(\r\n            id UUID PRIMARY KEY,\r\n            created_on VARCHAR(128),\r\n            car_id VARCHAR(128),\r\n            price VARCHAR(128),\r\n            price_offered VARCHAR(128),\r\n            old_price_offered VARCHAR(128),\r\n            new_price_offered VARCHAR(128),\r\n            buyer VARCHAR(128),\r\n            status VARCHAR(128),\r\n            created_date TIMESTAMP,\r\n            modified_date TIMESTAMP\r\n        )`;\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\nconst createUserTables = () => {\r\n  const queryText = `CREATE TABLE IF NOT EXISTS\r\n        users(\r\n          id UUID PRIMARY KEY,\r\n          token VARCHAR(128),\r\n          email VARCHAR(128),\r\n          firstname VARCHAR(128),\r\n          lastname VARCHAR(128),\r\n          password VARCHAR(128),\r\n          is_admin VARCHAR(128),\r\n          created_date TIMESTAMP,\r\n          modified_date TIMESTAMP\r\n        )`;\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\nconst createFlagTables = () => {\r\n  const queryText = `CREATE TABLE IF NOT EXISTS\r\n        flags(\r\n          id UUID PRIMARY KEY,\r\n          car_id VARCHAR(128),\r\n          reason VARCHAR(128),\r\n          description VARCHAR(128),\r\n          created_on TIMESTAMP,\r\n          modified_date TIMESTAMP\r\n        )`;\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Drop Tables\r\n */\r\nconst dropCarTables = () => {\r\n  const queryText = 'DROP TABLE IF EXISTS cars';\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\n/**\r\n * Drop Tables\r\n */\r\nconst dropOrderTables = () => {\r\n  const queryText = 'DROP TABLE IF EXISTS orders';\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\n/**\r\n * Drop Tables\r\n */\r\nconst dropUserTables = () => {\r\n  const queryText = 'DROP TABLE IF EXISTS users';\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\n\r\n/**\r\n * Drop Tables\r\n */\r\nconst dropFlagTables = () => {\r\n  const queryText = 'DROP TABLE IF EXISTS flags';\r\n  pool.query(queryText)\r\n    .then((res) => {\r\n      console.log(res);\r\n      pool.end();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      pool.end();\r\n    });\r\n};\r\n\r\npool.on('remove', () => {\r\n  process.exit(0);\r\n});\r\n\r\nmodule.exports = {\r\n  createCarTables,\r\n  createFlagTables,\r\n  createOrderTables,\r\n  createUserTables,\r\n  dropCarTables,\r\n  dropFlagTables,\r\n  dropOrderTables,\r\n  dropUserTables,\r\n};\r\n\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nrequire('make-runnable');\r\n"],"file":"db.js"}