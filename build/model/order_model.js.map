{"version":3,"sources":["../../server/model/order_model.js"],"names":["Order","orders","data","newOrder","status","id","uuid","v4","car_id","price_offered","price","modifiedDate","moment","now","push","i","length","error","newPriceOffered","order","findOne","index","indexOf","old_price_offered","new_price_offered","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,K;;;AACJ;;;;AAIA,mBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;AAED;;;;AAIA;;;;;2BACOC,I,EAAM;AACX,UAAMC,QAAQ,GAAG;AACfC,QAAAA,MAAM,EAAE,GADO;AAEfF,QAAAA,IAAI,EAAE;AACJG,UAAAA,EAAE,EAAEC,iBAAKC,EAAL,EADA;AAEJC,UAAAA,MAAM,EAAEN,IAAI,CAACM,MAAL,IAAe,EAFnB;AAGJJ,UAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,IAAe,EAHnB;AAIJK,UAAAA,aAAa,EAAEP,IAAI,CAACO,aAJhB;AAKJC,UAAAA,KAAK,EAAER,IAAI,CAACQ,KALR;AAMJC,UAAAA,YAAY,EAAEC,mBAAOC,GAAP;AANV;AAFS,OAAjB,CADW,CAaX;;AACA,WAAKZ,MAAL,CAAYa,IAAZ,CAAiBX,QAAjB;AACA,aAAOA,QAAP;AACD;AAED;;;;;AAKD;;;;4BACSE,E,EAAI;AACV,UAAI;AACF,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,MAAL,CAAYe,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAI,KAAKd,MAAL,CAAYc,CAAZ,EAAeb,IAAf,CAAoBG,EAApB,KAA2BA,EAA/B,EAAmC;AACjC,mBAAO,KAAKJ,MAAL,CAAYc,CAAZ,CAAP;AACD;AACF;AACF,OAND,CAME,OAAOE,KAAP,EAAc;AACd,eAAO,IAAP;AACD;AACF;AAED;;;;;AAKA;;;;qCACiBZ,E,EAAIa,e,EAAiB;AACpC,UAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaf,EAAb,CAAd;AACA,UAAMgB,KAAK,GAAG,KAAKpB,MAAL,CAAYqB,OAAZ,CAAoBH,KAApB,CAAd;;AACA,UAAI,KAAKlB,MAAL,CAAYoB,KAAZ,EAAmBnB,IAAnB,CAAwBE,MAAxB,KAAmC,SAAvC,EAAkD;AAChD,aAAKH,MAAL,CAAYoB,KAAZ,EAAmBnB,IAAnB,CAAwBqB,iBAAxB,GAA4C,KAAKtB,MAAL,CAAYoB,KAAZ,EAAmBnB,IAAnB,CAAwBO,aAApE;AACA,aAAKR,MAAL,CAAYoB,KAAZ,EAAmBnB,IAAnB,CAAwBsB,iBAAxB,GAA4CN,eAA5C;AACA,aAAKjB,MAAL,CAAYoB,KAAZ,EAAmBnB,IAAnB,CAAwBS,YAAxB,GAAuCC,mBAAOC,GAAP,EAAvC;AACA,eAAO,KAAKZ,MAAL,CAAYoB,KAAZ,CAAP;AACD;;AAGD,YAAM,IAAII,KAAJ,EAAN;AACD;;;;;;eAEY,IAAIzB,KAAJ,E","sourcesContent":["import moment from 'moment';\r\nimport uuid from 'uuid';\r\n\r\nclass Order {\r\n  /**\r\n   * class constructor\r\n   * @param {object} data\r\n   */\r\n  constructor() {\r\n    this.orders = [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {object} car object\r\n   */\r\n  //create order\r\n  create(data) {\r\n    const newOrder = {\r\n      status: 200,\r\n      data: {\r\n        id: uuid.v4(),\r\n        car_id: data.car_id || '',\r\n        status: data.status || '',\r\n        price_offered: data.price_offered,\r\n        price: data.price,\r\n        modifiedDate: moment.now(),\r\n      },\r\n    };\r\n\r\n    //push order to orders array\r\n    this.orders.push(newOrder);\r\n    return newOrder;\r\n  }\r\n\r\n  /**\r\n  *\r\n  * @param {uuid} id\r\n  * @returns {object} order object\r\n  */\r\n //find a single order\r\n  findOne(id) {\r\n    try {\r\n      for (let i = 0; i < this.orders.length; i++) {\r\n        if (this.orders[i].data.id === id) {\r\n          return this.orders[i];\r\n        }\r\n      }\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {uuid} id\r\n   * @param {object} data\r\n   */\r\n  //Update price of order still pending\r\n  updateOrderPrice(id, newPriceOffered) {\r\n    const order = this.findOne(id);\r\n    const index = this.orders.indexOf(order);\r\n    if (this.orders[index].data.status === 'pending') {\r\n      this.orders[index].data.old_price_offered = this.orders[index].data.price_offered;\r\n      this.orders[index].data.new_price_offered = newPriceOffered;\r\n      this.orders[index].data.modifiedDate = moment.now();\r\n      return this.orders[index];\r\n    }\r\n\r\n\r\n    throw new Error();\r\n  }\r\n}\r\nexport default new Order();\r\n"],"file":"order_model.js"}