{"version":3,"sources":["../../SERVER/model/order_model.js"],"names":["Order","orders","data","newOrder","id","uuid","v4","car_id","status","price_offered","price","modifiedDate","moment","now","push","i","length","error","newPriceOffered","order","findOne","index","indexOf","old_price_offered","new_price_offered","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,K;;;AACJ;;;;AAIA,mBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;AAED;;;;AAIA;;;;;2BACOC,I,EAAM;AACX,UAAMC,QAAQ,GAAG;AACbC,QAAAA,EAAE,EAAEC,iBAAKC,EAAL,EADS;AAEbC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MAAL,IAAe,EAFV;AAGbC,QAAAA,MAAM,EAAEN,IAAI,CAACM,MAAL,IAAe,EAHV;AAIbC,QAAAA,aAAa,EAAEP,IAAI,CAACO,aAJP;AAKbC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KALC;AAMbC,QAAAA,YAAY,EAAEC,mBAAOC,GAAP;AAND,OAAjB,CADW,CAUX;;AACA,WAAKZ,MAAL,CAAYa,IAAZ,CAAiBX,QAAjB;AACA,aAAOA,QAAP;AACD;AAED;;;;;AAKD;;;;4BACSC,E,EAAI;AACV,UAAI;AACF,aAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,MAAL,CAAYe,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,cAAI,KAAKd,MAAL,CAAYc,CAAZ,EAAeX,EAAf,KAAsBA,EAA1B,EAA8B;AAC5B,mBAAO,KAAKH,MAAL,CAAYc,CAAZ,CAAP;AACD;AACF;AACF,OAND,CAME,OAAOE,KAAP,EAAc;AACd,eAAO,IAAP;AACD;AACF;AAED;;;;;AAKA;;;;qCACiBb,E,EAAIc,e,EAAiB;AACpC,UAAMC,KAAK,GAAG,KAAKC,OAAL,CAAahB,EAAb,CAAd;AACA,UAAMiB,KAAK,GAAG,KAAKpB,MAAL,CAAYqB,OAAZ,CAAoBH,KAApB,CAAd;;AACA,UAAI,KAAKlB,MAAL,CAAYoB,KAAZ,EAAmBb,MAAnB,KAA8B,SAAlC,EAA6C;AAC3C,aAAKP,MAAL,CAAYoB,KAAZ,EAAmBE,iBAAnB,GAAuC,KAAKtB,MAAL,CAAYoB,KAAZ,EAAmBZ,aAA1D;AACA,aAAKR,MAAL,CAAYoB,KAAZ,EAAmBG,iBAAnB,GAAuCN,eAAvC;AACA,aAAKjB,MAAL,CAAYoB,KAAZ,EAAmBV,YAAnB,GAAkCC,mBAAOC,GAAP,EAAlC;AACA,eAAO,KAAKZ,MAAL,CAAYoB,KAAZ,CAAP;AACD;;AAGD,YAAM,IAAII,KAAJ,EAAN;AACD;;;;;;eAEY,IAAIzB,KAAJ,E","sourcesContent":["import moment from 'moment';\r\nimport uuid from 'uuid';\r\n\r\nclass Order {\r\n  /**\r\n   * class constructor\r\n   * @param {object} data\r\n   */\r\n  constructor() {\r\n    this.orders = [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {object} car object\r\n   */\r\n  //create order\r\n  create(data) {\r\n    const newOrder = {\r\n        id: uuid.v4(),\r\n        car_id: data.car_id || '',\r\n        status: data.status || '',\r\n        price_offered: data.price_offered,\r\n        price: data.price,\r\n        modifiedDate: moment.now(),\r\n    };\r\n\r\n    //push order to orders array\r\n    this.orders.push(newOrder);\r\n    return newOrder;\r\n  }\r\n\r\n  /**\r\n  *\r\n  * @param {uuid} id\r\n  * @returns {object} order object\r\n  */\r\n //find a single order\r\n  findOne(id) {\r\n    try {\r\n      for (let i = 0; i < this.orders.length; i++) {\r\n        if (this.orders[i].id === id) {\r\n          return this.orders[i];\r\n        }\r\n      }\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {uuid} id\r\n   * @param {object} data\r\n   */\r\n  //Update price of order still pending\r\n  updateOrderPrice(id, newPriceOffered) {\r\n    const order = this.findOne(id);\r\n    const index = this.orders.indexOf(order);\r\n    if (this.orders[index].status === 'pending') {\r\n      this.orders[index].old_price_offered = this.orders[index].price_offered;\r\n      this.orders[index].new_price_offered = newPriceOffered;\r\n      this.orders[index].modifiedDate = moment.now();\r\n      return this.orders[index];\r\n    }\r\n\r\n\r\n    throw new Error();\r\n  }\r\n}\r\nexport default new Order();\r\n"],"file":"order_model.js"}