{"version":3,"sources":["../../server/model/user_model.js"],"names":["uuid","require","bcrypt","User","users","data","newUser","status","id","v4","token","email","firstname","lastname","password","hashSync","error","hash","message","isAdmin","state","push","i","length","exports"],"mappings":";;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;IAGME,I;;;AACJ;;;;AAIA,kBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,EAAb;AACD;AAED;;;;AAIA;;;;;2BACOC,I,EAAM;AACX,UAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,GADM;AAEdF,QAAAA,IAAI,EAAE;AACJG,UAAAA,EAAE,EAAER,IAAI,CAACS,EAAL,MAAa,EADb;AAEJC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,IAAc,EAFjB;AAGJC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,IAAc,EAHjB;AAIJC,UAAAA,SAAS,EAAEP,IAAI,CAACO,SAAL,IAAkB,EAJzB;AAKJC,UAAAA,QAAQ,EAAER,IAAI,CAACQ,QAAL,IAAiB,EALvB;AAMJC,UAAAA,QAAQ,EAAEZ,MAAM,CAACa,QAAP,CAAgBV,IAAI,CAACS,QAArB,EAA+B,EAA/B,EAAmC,UAACE,KAAD,EAAQC,IAAR,EAAiB;AAC5D,gBAAID,KAAJ,EAAW;AACT,qBAAQ;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAAR;AACD;AACF,WAJS,KAIJ,EAVF;AAWJC,UAAAA,OAAO,EAAEd,IAAI,CAACe,KAAL,IAAc;AAXnB;AAFQ,OAAhB;AAiBA,WAAKhB,KAAL,CAAWiB,IAAX,CAAgBf,OAAhB;AACA,aAAOA,OAAP;AACD;AAED;;;;;AAKA;AACA;;;;4BACQE,E,EAAI;AACV;AACA,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,KAAL,CAAWmB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAI,KAAKlB,KAAL,CAAWkB,CAAX,EAAcjB,IAAd,CAAmBM,KAAnB,KAA6BH,EAAjC,EAAqC;AACnC,iBAAO,KAAKJ,KAAL,CAAWkB,CAAX,CAAP;AACD;AACF;AACF;AAED;;;;;;8BAGU;AACR,aAAO,KAAKlB,KAAZ;AACD;;;;;;AAEHoB,OAAO,WAAP,GAAkB,IAAIrB,IAAJ,EAAlB","sourcesContent":["\r\n\r\nconst uuid = require('uuid');\r\nconst bcrypt = require('bcrypt');\r\n\r\n\r\nclass User {\r\n  /**\r\n   * class constructor\r\n   * @param {object} data\r\n   */\r\n  constructor() {\r\n    this.users = [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {object} car object\r\n   */\r\n  //create user\r\n  create(data) {\r\n    const newUser = {\r\n      status: 200,\r\n      data: {\r\n        id: uuid.v4() || '',\r\n        token: data.token || '',\r\n        email: data.email || '',\r\n        firstname: data.firstname || '',\r\n        lastname: data.lastname || '',\r\n        password: bcrypt.hashSync(data.password, 10, (error, hash) => {\r\n          if (error) {\r\n            return ({ message: 'error found' });\r\n          }\r\n        }) || '',\r\n        isAdmin: data.state || '',\r\n      },\r\n    };\r\n\r\n    this.users.push(newUser);\r\n    return newUser;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {uuid} id\r\n   * @returns {object} user object\r\n   */\r\n  //find a single user\r\n  // eslint-disable-next-line consistent-return\r\n  findOne(id) {\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].data.email === id) {\r\n        return this.users[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {object} returns all users\r\n   */\r\n  findAll() {\r\n    return this.users;\r\n  }\r\n}\r\nexports.default = new User();\r\n"],"file":"user_model.js"}