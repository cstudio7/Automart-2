{"version":3,"sources":["../../../SERVER/usingDatastructure/model/car_model.js"],"names":["Car","cars","data","newCar","id","uuid","v4","created_on","moment","now","manufacturer","model","price","state","status","body_type","createdDate","modifiedDate","push","i","length","availableCars","findAvailableCars","availableCarsByMake","bodyType","unsold","carsByMake","unsoldCars","specificCar","findOne","minPrice","maxPrice","carRange","splice","newPrice","newAvailableCars","error"],"mappings":"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","sourcesContent":["/* eslint-disable no-plusplus */\r\nimport moment from 'moment';\r\nimport uuid from 'uuid';\r\n\r\nclass Car {\r\n  /**\r\n   * class constructor\r\n   * @param {object} data\r\n   */\r\n\r\n  constructor() {\r\n    this.cars = [];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {object} car object\r\n   */\r\n  //create a car ad\r\n  create(data) {\r\n    const newCar = {\r\n        id: uuid.v4(),\r\n        created_on: moment.now(),\r\n        manufacturer: data.manufacturer,\r\n        model: data.model,\r\n        price: data.price,\r\n        state: data.state || 'string',\r\n        status: data.status,\r\n        body_type: data.body_type,\r\n        createdDate: moment.now(),\r\n        modifiedDate: moment.now(),\r\n    };\r\n    //push car to cars array\r\n    this.cars.push(newCar);\r\n    return newCar;\r\n  }\r\n\r\n\r\n  /**\r\n  *\r\n  * @param {uuid} id\r\n  * @returns {object} car object\r\n  */\r\n //search for a single car\r\n  findOne(id) {\r\n    for (let i = 0; i < this.cars.length; i++) {\r\n      if (this.cars[i].id === id) {\r\n        return this.cars[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  //find cars available based on status\r\n  findAvailableCars(status) {\r\n    const availableCars = [];\r\n\r\n    for (let i = 0; i < this.cars.length; i++) {\r\n      if (this.cars[i].status === status) {\r\n        availableCars.push(this.cars[i]);\r\n      }\r\n    }\r\n    return availableCars;\r\n  }\r\n//view available cars by manufacturer\r\n  findAvailableCarsByMake(manufacturer, status) {\r\n    const availableCars = this.findAvailableCars(status);\r\n    const availableCarsByMake = []\r\n\r\n    for (let i = 0; i < this.cars.length; i++) {\r\n      if (availableCars[i].manufacturer === manufacturer) {\r\n        availableCarsByMake.push(this.cars[i]);\r\n      }\r\n    }\r\n    return availableCarsByMake;\r\n  }\r\n\r\n//find available cars by body type\r\n  findCarByBodyType(status, bodyType) {\r\n    const unsold = findAvailableCars(status);\r\n    const carsByMake = [];\r\n\r\n    for (let i = 0; i < unsoldCars.length; i++) {\r\n      if (unsold[i].body_type = bodyType) {\r\n        carsByMake.push(unsold[i]);\r\n      }\r\n    }\r\n    return carsByMake;\r\n  }\r\n\r\n  //Update status of car ad as \"sold\"\r\n  updateStatus(id) {\r\n    const specificCar = this.findOne(id);\r\n    specificCar.status = 'sold';\r\n    return specificCar;\r\n  }\r\n  //filter cars based on status, minimum price and maximum price provided\r\n  findFilterCars(status, minPrice, maxPrice) {\r\n    const unsoldCars = findAvailableCars(status);\r\n    const carRange = [];\r\n\r\n    for (let i = 0; i < unsoldCars.length; i++) {\r\n      if ((unsoldCars[i].price <= maxPrice) && (unsoldCars[i].price >= minPrice)) {\r\n        carRange.push(unsoldCars[i]);\r\n      }\r\n    }\r\n    return carRange;\r\n  }\r\n\r\n  /**\r\n  *\r\n  * @param {uuid} id\r\n  * @returns {object} car object\r\n  */\r\n //delete car ad\r\n  deleteCar(id) {\r\n    for (let i = 0; i < this.cars.length; i++) {\r\n      if (this.cars[i].id === id) {\r\n        this.cars.splice(i, 1);\r\n        return ('Car Ad successfull deleted');\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n//update price of car \r\n  updateCarPrice(id, newPrice) {\r\n    for (let i = 0; i < this.cars.length; i++) {\r\n      if (this.cars[i].id === id) {\r\n        this.cars[i].price = newPrice;\r\n        return this.cars[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n//find new Available car by make\r\n  findNewAvailableCars(status, state, manufacturer){\r\n    try{\r\n    newAvailableCars = [];\r\n\r\n    for(let i = 0; i < this.cars.length; i++){\r\n      if(this.cars[i].status === status && this.cars[i].state === state && this.cars[i].manufacturer === manufacturer){\r\n       newAvailableCars.push(this.cars[i])\r\n      }\r\n\r\n    }\r\n  }catch(error){\r\n    return ({error: \"no car found\"})\r\n  }\r\n\r\n    \r\n  }\r\n//find used available car by make\r\n  findUsedAvailableCars(status, state, manufacturer){\r\n    try{\r\n    newAvailableCars = [];\r\n\r\n    for(let i = 0; i < this.cars.length; i++){\r\n      if(this.cars[i].status === status && this.cars[i].state === state && this.cars[i].manufacturer === manufacturer){\r\n       newAvailableCars.push(this.cars[i])\r\n      }\r\n\r\n    }\r\n  }catch(error){\r\n    return ({error: \"no car found\"})\r\n  }\r\n\r\n    \r\n  }\r\n  \r\n  /**\r\n   * @returns {object} returns all cars\r\n   */\r\n  //return all cars available\r\n  findAll() {\r\n    return this.cars;\r\n  }\r\n}\r\nexport default new Car();\r\n"],"file":"car_model.js"}