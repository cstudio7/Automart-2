{"version":3,"sources":["../../../SERVER/usingDB/middleware/checkAuth.js"],"names":["module","exports","req","res","next","auth","headers","token","decode","jwt","verify","process","env","TOKEN","userData","error","status","send"],"mappings":";;AAAA;;;;AAEA;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAI;AACF,QAAMC,IAAI,GAAGH,GAAG,CAACI,OAAJ,CAAYC,KAAzB;;AACA,QAAMC,MAAM,GAAGC,yBAAIC,MAAJ,CAAWL,IAAX,EAAiBM,OAAO,CAACC,GAAR,CAAYC,KAA7B,CAAf;;AACAX,IAAAA,GAAG,CAACY,QAAJ,GAAeN,MAAf;AACAJ,IAAAA,IAAI;AACL,GALD,CAKE,OAAOW,KAAP,EAAc;AACd,WAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,KAAK,EAAE;AAAtB,KAArB,CAAP;AACD;;AACD,SAAO,IAAP;AACD,CAVD","sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\n// Authentication middleware; check for token\r\nmodule.exports = (req, res, next) => {\r\n  try {\r\n    const auth = req.headers.token;\r\n    const decode = jwt.verify(auth, process.env.TOKEN);\r\n    req.userData = decode;\r\n    next();\r\n  } catch (error) {\r\n    return res.status(401).send({ status: 401, error: 'Authentication failed' });\r\n  }\r\n  return null;\r\n};\r\n"],"file":"checkAuth.js"}