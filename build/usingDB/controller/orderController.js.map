{"version":3,"sources":["../../../SERVER/usingDB/controller/orderController.js"],"names":["Order","create","req","res","text","values","body","car_id","buyer","price","price_offered","status","Date","db","query","rows","order","send","error","getUpdateOrderPrice","findOneQuery","updateOneQuery","params","id","orderId","old_price_offered","new_price_offered","response","modifiedOrder","message"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\";\r\nimport db from '../db';\r\nimport moment from 'moment';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n\r\nconst Order = {\r\n\r\n    /**\r\n   * Create A Order\r\n   * @param {object} req \r\n   * @param {object} res\r\n   * @returns {object} order object \r\n   */\r\n  async create(req, res) {\r\n    const text = `INSERT INTO\r\n      orders(id, car_id, buyer, price, price_offered, status, created_on, modified_date)\r\n      VALUES($1, $2, $3, $4, $5, $6, $7, $8)\r\n      returning *`;\r\n    const values = [\r\n      uuidv4(),\r\n      req.body.car_id,\r\n      req.body.buyer,\r\n      req.body.price,\r\n      req.body.price_offered,\r\n      req.body.status,\r\n      moment(new Date()),\r\n      moment(new Date())\r\n    ];\r\n    try {\r\n      const { rows } = await db.query(text, values);\r\n      const order = (rows[0])\r\n      return res.status(201).send({status: 201, order});\r\n      } catch(error) {\r\n        return res.status(400).send({status: 400, error});\r\n      }\r\n  },\r\n  /**\r\n   * Update an Order\r\n   * @param {object} req \r\n   * @param {object} res \r\n   * @returns {object} updated order\r\n   */\r\n  async getUpdateOrderPrice(req, res) {\r\n    const findOneQuery = 'SELECT * FROM orders WHERE id=$1';\r\n    \r\n    const updateOneQuery =`UPDATE orders\r\n      SET car_id=$1,price=$2,price_offered=$3, old_price_offered=$4, new_price_offered=$5, modified_date=$6\r\n      WHERE id=$7 returning *`;\r\n    try {\r\n       req.params.id = req.params.orderId;\r\n      const { rows } = await db.query(findOneQuery, [req.params.id]);\r\n      \r\n      if(!rows[0]) {\r\n        return res.status(404).send({status: 404, error : 'order not found'});\r\n      }\r\n      else if(rows[0].status === 'pending'){\r\n        req.body.old_price_offered = rows[0].price_offered;\r\n        req.body.new_price_offered = req.body.price_offered;\r\n        const values = [\r\n          req.body.car_id,\r\n          req.body.price,\r\n          req.body.price_offered,\r\n          req.body.old_price_offered,\r\n          req.body.new_price_offered,\r\n          moment(new Date()),\r\n          req.params.id\r\n          \r\n        ];\r\n        const response = await db.query(updateOneQuery, values);\r\n        const modifiedOrder = response.rows[0]\r\n        return res.status(200).send({status: 200, modifiedOrder});\r\n      }\r\n      else{\r\n        return res.status(404).send({status: 404, message: `cannot update price, status is ${rows[0].status}`});\r\n      }\r\n      \r\n      \r\n     \r\n     } catch(err) {\r\n       return res.status(400).send(err);\r\n     }\r\n  },\r\n}\r\n\r\nexport default Order;\r\n"],"file":"orderController.js"}