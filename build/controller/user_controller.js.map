{"version":3,"sources":["../../SERVER/controller/user_controller.js"],"names":["require","config","User","create","req","res","body","token","jwt","sign","email","process","env","TOKEN","user","UserModel","status","send","error","getAll","users","findAll","getOne","findOne","bcrypt","compare","password","result","message"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,IAAMC,IAAI,GAAG;AACX;;;;;;AAMA;AACAC,EAAAA,MARW,kBAQJC,GARI,EAQCC,GARD,EAQM;AACf,QAAI;AACFD,MAAAA,GAAG,CAACE,IAAJ,CAASC,KAAT,GAAiBC,yBAAIC,IAAJ,CAASL,GAAG,CAACE,IAAJ,CAASI,KAAlB,EAAyBC,OAAO,CAACC,GAAR,CAAYC,KAArC,CAAjB;;AAEA,UAAMC,IAAI,GAAGC,kCAAkBZ,MAAlB,CAAyBC,GAAG,CAACE,IAA7B,CAAb;;AACA,aAAOD,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,QAAAA,MAAM,EAAE,GAAT;AAAcF,QAAAA,IAAI,EAAJA;AAAd,OAArB,CAAP;AACD,KALD,CAKE,OAAOI,KAAP,EAAc;AACd,aAAOb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,QAAAA,MAAM,EAAE,GAAT;AAAeE,QAAAA,KAAK,EAAE;AAAtB,OAArB,CAAP;AACD;AACF,GAjBU;;AAkBX;;;;;;AAMA;AACAC,EAAAA,MAzBW,kBAyBJf,GAzBI,EAyBCC,GAzBD,EAyBM;AACf,QAAMe,KAAK,GAAGL,uBAAUM,OAAV,EAAd;;AACA,WAAOhB,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,MAAAA,MAAM,EAAE,GAAT;AAAcI,MAAAA,KAAK,EAALA;AAAd,KAArB,CAAP;AACD,GA5BU;;AA6BX;;;;;;AAMA;AACAE,EAAAA,MApCW,kBAoCJlB,GApCI,EAoCCC,GApCD,EAoCM;AACf,QAAMS,IAAI,GAAGC,kCAAkBQ,OAAlB,CAA0BnB,GAAG,CAACE,IAAJ,CAASI,KAAnC,CAAb;;AAEA,QAAI,CAACI,IAAL,EAAW;AACT,aAAOT,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE,GAAV;AAAeE,QAAAA,KAAK,EAAE;AAAtB,OAArB,CAAP;AACD;;AACD,QAAI;AACFM,yBAAOC,OAAP,CAAerB,GAAG,CAACE,IAAJ,CAASoB,QAAxB,EAAkCX,uBAAUW,QAA5C,EAAsD,UAACR,KAAD,EAAQS,MAAR,EAAmB;AACvE,YAAIT,KAAJ,EAAW;AACT,iBAAOb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,GAAV;AAAeY,YAAAA,OAAO,EAAE;AAAxB,WAArB,CAAP;AACD;;AAAC,YAAID,MAAJ,EAAY;AACZ,iBAAOtB,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,YAAAA,MAAM,EAAE,GAAT;AAAeY,YAAAA,OAAO,EAAE;AAAxB,WAArB,CAAP;AACD;AACF,OAND;;AAQA,aAAOvB,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,QAAAA,MAAM,EAAE,GAAT;AAAcF,QAAAA,IAAI,EAAJA;AAAd,OAArB,CAAP;AACD,KAVD,CAUE,OAAOI,KAAP,EAAc;AACd,aAAOb,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACD,QAAAA,MAAM,EAAE,GAAT;AAAeE,QAAAA,KAAK,EAAE;AAAtB,OAArB,CAAP;AACD;AACF;AAvDU,CAAb;eA2DehB,I","sourcesContent":["import bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\nimport UserModel from '../model/user_model';\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\nconst User = {\r\n  /**\r\n   *\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} user object\r\n   */\r\n  //sign up a single user\r\n  create(req, res) {\r\n    try {\r\n      req.body.token = jwt.sign(req.body.email, process.env.TOKEN);\r\n\r\n      const user = UserModel.default.create(req.body);\r\n      return res.status(201).send({status: 201, user});\r\n    } catch (error) {\r\n      return res.status(400).send({status: 400,  error: 'email and password are required' });\r\n    }\r\n  },\r\n  /**\r\n   *\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} Users array\r\n   */\r\n  //get all users\r\n  getAll(req, res) {\r\n    const users = UserModel.findAll();\r\n    return res.status(200).send({status: 200, users});\r\n  },\r\n  /**\r\n   *\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} user object\r\n   */\r\n  //sign in a specific user\r\n  getOne(req, res) {\r\n    const user = UserModel.default.findOne(req.body.email);\r\n\r\n    if (!user) {\r\n      return res.status(404).send({ status: 404, error: 'user not found' });\r\n    }\r\n    try {\r\n      bcrypt.compare(req.body.password, UserModel.password, (error, result) => {\r\n        if (error) {\r\n          return res.status(401).send({ status: 401, message: 'Auth failed' });\r\n        } if (result) {\r\n          return res.status(200).send({status: 200,  message: 'Auth successful' });\r\n        }\r\n      });\r\n\r\n      return res.status(200).send({status: 200, user});\r\n    } catch (error) {\r\n      return res.status(401).send({status: 401,  error: 'Enter valid email and password' });\r\n    }\r\n  },\r\n\r\n};\r\n\r\nexport default User;\r\n"],"file":"user_controller.js"}