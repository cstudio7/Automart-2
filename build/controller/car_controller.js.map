{"version":3,"sources":["../../server/controller/car_controller.js"],"names":["Car","create","req","res","body","manufacturer","price","model","status","send","message","car","CarModel","data","email","getOne","findOne","params","carId","body_type","getAvailableCars","carsArray","findAvailableCars","query","getUpdatePrice","updateCarPrice","error","deleted","deleteCar","getUpdateStatus","specifiedCar","updateStatus","getFilterCars","cars","findFilterCars","minPrice","maxPrice","getAll","findAll"],"mappings":"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","sourcesContent":["import CarModel from '../model/car_model';\r\n\r\nconst Car = {\r\n  /**\r\n   *\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} car object\r\n   */\r\n  //post car to car array (as database)\r\n  create(req, res) {\r\n    if (!req.body.manufacturer && !req.body.price && !req.body.model) {\r\n      return res.status(400).send({ message: 'All fields are required' });\r\n    }\r\n    const car = CarModel.create(req.body);\r\n    car.data.email = req.body.email;\r\n    return res.status(201).send(car);\r\n  },\r\n  //view a specific car\r\n  getOne(req, res) {\r\n    const car = CarModel.findOne(req.params.carId);\r\n    if (!car) {\r\n      return res.status(404).send({ message: 'car not found' });\r\n    }\r\n    car.data.body_type = req.body.body_type || ' ';\r\n    return res.status(200).send(car);\r\n  },\r\n  //view all available cars posted\r\n  getAvailableCars(req, res) {\r\n    const carsArray = CarModel.findAvailableCars(req.query.status);\r\n    return res.status(200).send(carsArray);\r\n  },\r\n  //update price of car ad posted\r\n  getUpdatePrice(req, res) {\r\n    const car = CarModel.findOne(req.params.carId);\r\n    if (!car) {\r\n      return res.status(404).send({ message: 'car not found' });\r\n    }\r\n    try {\r\n      const car = CarModel.updateCarPrice(req.params.carId, req.body.price);\r\n      return res.status(200).send(car);\r\n    } catch (error) {\r\n      return res.status(404).send({ message: 'cannot update price' });\r\n    }\r\n  },\r\n  //delete a specific car in array\r\n  delete(req, res) {\r\n    const car = CarModel.findOne(req.params.carId);\r\n    if (!car) {\r\n      return res.status(404).send({ message: 'no car to delete' });\r\n    }\r\n    const deleted = CarModel.deleteCar(req.params.carId);\r\n    return res.status(200).send(deleted);\r\n  },\r\n    //update status of car in array\r\n  getUpdateStatus(req, res) {\r\n    const car = CarModel.findOne(req.params.carId);\r\n    if (!car) {\r\n      return res.status(404).send({ message: 'car not found' });\r\n    }\r\n    try {\r\n      const specifiedCar = CarModel.updateStatus(req.params.carId);\r\n      return res.status(200).send(specifiedCar);\r\n    } catch (error) {\r\n      return res.status(404).send({ message: 'cannot update status' });\r\n    }\r\n  },\r\n  //search for cars based on price and status\r\n  getFilterCars(req, res) {\r\n    try {\r\n      const cars = CarModel.findFilterCars(req.query.status, req.query.minPrice, req.query.maxPrice);\r\n      return res.status(200).send(cars);\r\n    } catch (error) {\r\n      res.status(404).send({ message: 'cannot find cars' });\r\n    }\r\n  },\r\n  /**\r\n   *\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} car array\r\n   */\r\n  //find all cars\r\n  getAll(req, res) {\r\n    const cars = CarModel.findAll();\r\n    return res.status(200).send(cars);\r\n  },\r\n};\r\n\r\nexport default Car;\r\n"],"file":"car_controller.js"}