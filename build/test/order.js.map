{"version":3,"sources":["../../SERVER/test/order.js"],"names":["chai","use","chaiHttp","should","process","env","NODE_ENV","describe","userOne","email","password","orderOne","id","car_id","price","buyer","status","price_offered","old_price_offered","new_price_offered","created_date","modified_date","orderTwo","userToken","orderOneId","orderTwoId","before","request","server","post","send","result","equal","body","data","token","set","firstOrder","secondOrder","it","eql","error","be","a","have","property","patch"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../app';\r\n\r\nchai.use(chaiHttp);\r\nshould = chai.should();\r\n\r\n// During the test the env variable is set to test\r\nprocess.env.NODE_ENV = 'test';\r\n\r\n\r\n// Our parent block\r\ndescribe('ORDER', () => {\r\n  const userOne = {\r\n    email: 'testemail@gmail.com',\r\n    password: 'password',\r\n  };\r\n\r\n  const orderOne = {\r\n    id: 1,\r\n    car_id: 3,\r\n    price: 200000,\r\n    buyer: 'John Doe',\r\n    status: 'available',\r\n    price_offered: 250000,\r\n    old_price_offered: 250000,\r\n    new_price_offered: 300000,\r\n    created_date: 12345,\r\n    modified_date: 12345,\r\n  };\r\n  const orderTwo = {\r\n    id: 2,\r\n    car_id: 4,\r\n    price: 200000,\r\n    buyer: 'John Williams',\r\n    status: 'pending',\r\n    price_offered: 250000,\r\n    old_price_offered: 250000,\r\n    new_price_offered: 300000,\r\n    created_date: 12345,\r\n    modified_date: 12345,\r\n  };\r\n\r\n  let userToken; let orderOneId; let orderTwoId;\r\n\r\n  before(async () => {\r\n    const result = await chai\r\n      .request(server)\r\n      .post('/api/v1/auth/signup')\r\n      .send(userOne);\r\n    result.status.should.equal(201);\r\n    userToken = result.body.data.token;\r\n  });\r\n  before(async () => {\r\n    const firstOrder = await chai\r\n      .request(server)\r\n      .post('/api/v1/order')\r\n      .set('token', userToken)\r\n      .send(orderOne);\r\n    firstOrder.status.should.equal(201);\r\n    orderOneId = firstOrder.body.data.id;\r\n  });\r\n  before(async () => {\r\n    const secondOrder = await chai\r\n      .request(server)\r\n      .post('/api/v1/order')\r\n      .set('token', userToken)\r\n      .send(orderTwo);\r\n    secondOrder.status.should.equal(201);\r\n    orderTwoId = secondOrder.body.data.id;\r\n  });\r\n\r\n  describe('/POST api/v1/order', () => {\r\n    it('it should return a 401 authentication failed', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/order')\r\n        .send(orderOne);\r\n      result.status.should.equal(401);\r\n      result.body.should.eql({ status: 401, error: 'Authentication failed' });\r\n    });\r\n\r\n    it('it should return a 201 response upon authorization', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/order')\r\n        .set('token', userToken)\r\n        .send(orderOne);\r\n      result.status.should.equal(201);\r\n    });\r\n\r\n    it('it should be an object with keys and values for authorised login', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/order')\r\n        .set('token', userToken)\r\n        .send(orderTwo);\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(201);\r\n      result.body.data.should.have.property('price_offered');\r\n      result.body.data.should.have.property('price');\r\n      result.body.data.price.should.equal('200000');\r\n      result.body.data.should.have.property('car_id');\r\n      result.body.data.should.have.property('buyer');\r\n      result.body.data.should.have.property('status');\r\n      result.body.data.should.have.property('old_price_offered');\r\n      result.body.data.should.have.property('new_price_offered');\r\n      result.body.data.should.have.property('id');\r\n    });\r\n    it('it should return a 400 error if required fields are missing for authorized login', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/order')\r\n        .set('token', userToken)\r\n        .send({});\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(400);\r\n      result.body.should.eql({ status: 400, error: 'please enter price offered and car ID' });\r\n    });\r\n  });\r\n\r\n  describe('/api/v1/order/:orderId/price: update price of purchase order', () => {\r\n    it('it should return a 401 authentication failed for unauthorised user', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/order/${orderOneId}/price`)\r\n        .send(orderOne);\r\n      result.status.should.equal(401);\r\n      result.body.should.eql({ status: 401, error: 'Authentication failed' });\r\n    });\r\n\r\n    it('it should be successful with 200 response upon authorization', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/order/${orderTwoId}/price`)\r\n        .set('token', userToken)\r\n        .send(orderOne);\r\n      result.status.should.equal(200);\r\n    });\r\n\r\n\r\n    it('it should be an object with keys and values', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/order/${orderTwoId}/price`)\r\n        .set('token', userToken)\r\n        .send(orderOne);\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(200);\r\n      result.body.data.should.have.property('price_offered');\r\n      result.body.data.should.have.property('price');\r\n      result.body.data.price.should.equal('200000');\r\n      result.body.data.should.have.property('car_id');\r\n      result.body.data.should.have.property('buyer');\r\n      result.body.data.should.have.property('status');\r\n      result.body.data.should.have.property('old_price_offered');\r\n      result.body.data.should.have.property('new_price_offered');\r\n      result.body.data.should.have.property('id');\r\n    });\r\n    it('it should return a 400 error if required fields are missing', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/order/${orderTwoId}/price`)\r\n        .set('token', userToken)\r\n        .send({});\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(400);\r\n      result.body.should.eql({ status: 400, error: 'please enter new price offered and car ID' });\r\n    });\r\n    it('it should update an order if status is pending', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/order/${orderTwoId}/price`)\r\n        .set('token', userToken)\r\n        .send({\r\n          price: '800000',\r\n        });\r\n\r\n      result.status.should.equal(200);\r\n      result.body.data.should.have.property('new_price_offered');\r\n      result.body.data.price.should.equal('800000');\r\n    });\r\n  });\r\n});\r\n"],"file":"order.js"}