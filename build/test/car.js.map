{"version":3,"sources":["../../SERVER/test/car.js"],"names":["chai","use","chaiHttp","should","process","env","NODE_ENV","describe","userOne","email","password","firstCar","id","car_id","price","buyer","status","manufacturer","state","created_date","modified_date","secondCar","userToken","firstCarId","secondCarId","before","request","server","post","send","result","equal","body","user","token","set","data","it","eql","error","be","a","have","property","patch","updatedAd"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../app';\r\n\r\nchai.use(chaiHttp);\r\nshould = chai.should();\r\n\r\n// During the test the env variable is set to test\r\nprocess.env.NODE_ENV = 'test';\r\n\r\n\r\n// Our parent block\r\ndescribe('CAR', () => {\r\n  const userOne = {\r\n    email: 'testemail@gmail.com',\r\n    password: 'password',\r\n  };\r\n\r\n  const firstCar = {\r\n    id: 1,\r\n    car_id: 3,\r\n    price: 200000,\r\n    buyer: 'John Doe',\r\n    status: 'available',\r\n    manufacturer: 'Toyota',\r\n    state: 'new',\r\n    created_date: 12345,\r\n    modified_date: 12345,\r\n  };\r\n  const secondCar = {\r\n    id: 2,\r\n    car_id: 4,\r\n    price: 200000,\r\n    buyer: 'John Williams',\r\n    status: 'pending',\r\n    manufacturer: 'Toyota',\r\n    state: 'used',\r\n    created_date: 12345,\r\n    modified_date: 12345,\r\n  };\r\n\r\n  let userToken; let firstCarId; let secondCarId;\r\n\r\n  before(async () => {\r\n    const result = await chai\r\n      .request(server)\r\n      .post('/api/v1/auth/signup')\r\n      .send(userOne);\r\n    result.status.should.equal(201);\r\n    userToken = result.body.user.token;\r\n  });\r\n  before(async () => {\r\n    const result = await chai\r\n      .request(server)\r\n      .post('/api/v1/car')\r\n      .set('Authorization', userToken)\r\n      .send(firstCar);\r\n    result.status.should.equal(201);\r\n    firstCarId = result.body.data.id;\r\n  });\r\n  before(async () => {\r\n    const result = await chai\r\n      .request(server)\r\n      .post('/api/v1/car')\r\n      .set('Authorization', userToken)\r\n      .send(secondCar);\r\n    result.status.should.equal(201);\r\n    secondCarId = result.body.data.id;\r\n  });\r\n\r\n  describe('/POST api/v1/car:   post a Car Ad', () => {\r\n    it('it should return a 401 authentication failed', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/car')\r\n        .send(firstCar);\r\n      result.status.should.equal(401);\r\n      result.body.should.eql({ status: 401, error: 'Authentication failed' });\r\n    });\r\n\r\n    it('it should return a 201 response upon authorization', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/car')\r\n        .set('Authorization', userToken)\r\n        .send(firstCar);\r\n      result.status.should.equal(201);\r\n    });\r\n\r\n    it('it should be an object with keys and values for authorised login', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/car')\r\n        .set('Authorization', userToken)\r\n        .send(secondCar);\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(201);\r\n      result.body.data.should.have.property('price');\r\n      result.body.data.price.should.equal('200000');\r\n      result.body.data.should.have.property('manufacturer');\r\n      result.body.data.should.have.property('state');\r\n      result.body.data.should.have.property('status');\r\n    });\r\n    it('it should return a 400 error if required fields are missing for authorized login', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/car')\r\n        .set('Authorization', userToken)\r\n        .send({});\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(400);\r\n      result.body.should.eql({ status: 400, error: 'please enter required fields' });\r\n    });\r\n  });\r\n\r\n  describe('/api/v1/car/:carId/price: update price of purchase car', () => {\r\n    it('it should return a 401 authentication failed for unauthorised user', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/car/${firstCarId}/price`)\r\n        .send(firstCar);\r\n      result.status.should.equal(401);\r\n      result.body.should.eql({ status: 401, error: 'Authentication failed' });\r\n    });\r\n\r\n    it('it should be successful with 200 response upon authorization', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/car/${secondCarId}/price`)\r\n        .set('Authorization', userToken)\r\n        .send(firstCar);\r\n      result.status.should.equal(200);\r\n    });\r\n\r\n\r\n    it('it should be an object with keys and values', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/car/${secondCarId}/price`)\r\n        .set('Authorization', userToken)\r\n        .send(firstCar);\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(200);\r\n      result.body.updatedAd.should.have.property('price');\r\n      result.body.updatedAd.price.should.equal('200000');\r\n      result.body.updatedAd.should.have.property('manufacturer');\r\n      result.body.updatedAd.should.have.property('state');\r\n      result.body.updatedAd.should.have.property('status');\r\n    });\r\n    it('it should return a 400 error if required fields are missing', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/car/${secondCarId}/price`)\r\n        .set('Authorization', userToken)\r\n        .send({});\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(400);\r\n      result.body.should.eql({ status: 400, error: 'please enter required fields' });\r\n    });\r\n    it('it should update car Ad price', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .patch(`/api/v1/car/${secondCarId}/price`)\r\n        .set('Authorization', userToken)\r\n        .send({\r\n          price: '800000',\r\n        });\r\n\r\n      result.status.should.equal(200);\r\n      result.body.updatedAd.should.have.property('price');\r\n      result.body.updatedAd.price.should.equal('800000');\r\n    });\r\n  });\r\n});\r\n"],"file":"car.js"}