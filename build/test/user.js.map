{"version":3,"sources":["../../SERVER/test/user.js"],"names":["chai","use","chaiHttp","should","process","env","NODE_ENV","describe","userOne","email","password","userTwo","userThree","before","request","server","post","send","result","status","equal","it","body","be","a","data","have","property","eql","error"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../app';\r\n\r\nchai.use(chaiHttp);\r\nshould = chai.should();\r\n\r\n// During the test the env variable is set to test\r\nprocess.env.NODE_ENV = 'test';\r\n\r\n\r\n// Our parent block\r\ndescribe('USER', () => {\r\n// let userToken;\r\n\r\n  const userOne = {\r\n    email: 'testemail3@gmail.com',\r\n    password: 'password',\r\n  };\r\n  const userTwo = {\r\n    email: 'testemail4@gmail.com',\r\n    password: 'password',\r\n  };\r\n  const userThree = {\r\n    email: 'testemail5@gmail.com',\r\n    password: 'password',\r\n  };\r\n  before(async () => {\r\n    const result = await chai\r\n      .request(server)\r\n      .post('/api/v1/auth/signup')\r\n      .send(userOne);\r\n    result.status.should.equal(201);\r\n    // userToken = result.body.user.token;\r\n  });\r\n\r\n  describe('SIGNUP', () => {\r\n    it('it should be an object with keys and values', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userTwo);\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(201);\r\n      result.body.data.should.have.property('email');\r\n      result.body.data.should.have.property('password');\r\n      result.body.data.email.should.equal('testemail4@gmail.com');\r\n      result.body.data.should.have.property('id');\r\n    });\r\n    it('it should return a signin token', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/auth/signup')\r\n        .send(userThree);\r\n      result.body.data.should.be.a('object');\r\n      result.status.should.equal(201);\r\n      result.body.data.should.have.property('token');\r\n    });\r\n    it('it should return a 400 error if required fields are missing for authorized login', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/auth/signup')\r\n        .send({});\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(400);\r\n      result.body.should.eql({ status: 400, error: 'please fill in required fields' });\r\n    });\r\n\r\n    // it('it should not allow repeated signup of the same user', async () => {\r\n    //   const result = await chai\r\n    //     .request(server)\r\n    //     .post('/api/v1/auth/signup')\r\n    //     .send({userOne})\r\n    //   result.body.should.be.a('object');\r\n    //   result.status.should.equal(404);\r\n    // eslint-disable-next-line max-len\r\n    //   result.body.should.eql({ status: 404, error:'A user with the specified email already exist'});\r\n    // });\r\n  });\r\n\r\n  describe('SIGNIN', () => {\r\n    it('it should be an object with keys and values', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userTwo);\r\n      result.body.should.be.a('object');\r\n      result.status.should.equal(200);\r\n      result.body.data.should.have.property('email');\r\n      result.body.data.should.have.property('password');\r\n      result.body.data.email.should.equal('testemail4@gmail.com');\r\n      result.body.data.should.have.property('id');\r\n    });\r\n    it('it should return a signin token', async () => {\r\n      const result = await chai\r\n        .request(server)\r\n        .post('/api/v1/auth/signin')\r\n        .send(userThree);\r\n      result.body.data.should.be.a('object');\r\n      result.status.should.equal(200);\r\n      result.body.data.should.have.property('token');\r\n    });\r\n  });\r\n});\r\n"],"file":"user.js"}